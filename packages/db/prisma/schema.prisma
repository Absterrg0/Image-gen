// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




model User{
  id              String      @id @default(uuid())
  username        String      @unique
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}


model Model{
  id              String        @id @default(uuid())
  name            String      
  type            ModelGenType  
  age             Int
  ethnicity       EthnicityType 
  eyeColor        EyeColorType
  bald            Boolean
  outputImages    OutputImage[]
  trainingImages  TrainingImages[]
  userId          String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}


model TrainingImages {
  id              String    @id  @default(uuid())
  imageUrl        String    @default("")
  modelId         String
  model           Model     @relation(fields: [modelId],references: [id])
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}



model OutputImage {
  id              String    @id @default(uuid())
  imageUrl        String    @default("")
  status          StatusEnum
  prompt          String
  modelId         String
  userId          String
  model           Model     @relation(fields: [modelId],references: [id])
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}


model Pack {
  id              String    @id @default(uuid())
  name            String
  promtps         PackPrompts[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}


model PackPrompts {
  id              String    @id @default(uuid())
  prompt          String
  packId          String
  pack            Pack      @relation(fields: [packId],references: [id])
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}


enum ModelGenType {
  Man
  Woman
  Other
}


enum EthnicityType {
  White
  Black
  Asian 
  American
}


enum EyeColorType {
  Brown
  Blue
  Black
  Hazel
}


enum StatusEnum {
  Pending
  Generated
  Failed
}
